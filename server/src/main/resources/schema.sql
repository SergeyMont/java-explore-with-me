CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(512) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
 );

CREATE TABLE IF NOT EXISTS categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    CONSTRAINT pk_category PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned BOOLEAN,
    title VARCHAR(255) NOT NULL,
    CONSTRAINT pk_compilation PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    category_id BIGINT,
    annotation VARCHAR(400) NOT NULL,
    confirmed_requests BIGINT,
    created_on TIMESTAMP,
    description VARCHAR(4000),
    event_date TIMESTAMP,
    initiator_id BIGINT,
    lat FLOAT,
    lon FLOAT,
    paid BOOLEAN,
    participant_limit INT,
    published_on TIMESTAMP,
    request_moderation BOOLEAN,
    state VARCHAR(25),
    title VARCHAR(255),
    views BIGINT,
    CONSTRAINT pk_event PRIMARY KEY (id),
    CONSTRAINT FK_EVENTS_ON_CATEGORIES FOREIGN KEY (category_id) REFERENCES categories (id),
    CONSTRAINT FK_EVENTS_ON_USERS FOREIGN KEY (initiator_id) REFERENCES users (id)
    );

CREATE TABLE IF NOT EXISTS list_events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    compilation_id BIGINT,
    event_id BIGINT,
    CONSTRAINT pk_list_event PRIMARY KEY (id),
    CONSTRAINT FK_LIST_EVENTS_ON_EVENTS FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT FK_LIST_EVENTS_ON_COMPALATIONS FOREIGN KEY (compilation_id) REFERENCES compilations (id)
    );

    CREATE TABLE IF NOT EXISTS requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event_id BIGINT,
    created TIMESTAMP,
    requester_id BIGINT,
    status VARCHAR(25) NOT NULL,
    CONSTRAINT pk_request PRIMARY KEY (id),
    CONSTRAINT FK_REQUESTS_ON_EVENTS FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT FK_REQUESTS_ON_USERS FOREIGN KEY (requester_id) REFERENCES users (id)
    );

    CREATE TABLE IF NOT EXISTS rating(
    user_id BIGINT NOT NULL,
    event_id BIGINT NOT NULL,
    rating BIGINT,
    FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE,
    FOREIGN KEY (event_id) REFERENCES films (event_id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, event_id)
    );